-- วางใน StarterPlayerScripts หรือ StarterGui

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

-- CONFIG STATE
local LOCK_DISTANCE = 40
local minLockDistance, maxLockDistance = 10, math.huge
local HEAD_HITBOX_SIZE = 2
local BODY_HITBOX_SIZE = 2
local MAX_HITBOX_SIZE = 50

-- ขนาดปกติของ Hitbox
local DEFAULT_HEAD_SIZE = Vector3.new(2, 1, 1)
local DEFAULT_BODY_SIZE = Vector3.new(2, 2, 1)

-- ปุ่มลัดเริ่มต้น (ปรับเปลี่ยนได้)
local toggleLockKey = Enum.KeyCode.Q
local toggleFireKey = Enum.KeyCode.E
local toggleHeadHitboxKey = Enum.KeyCode.H
local toggleBodyHitboxKey = Enum.KeyCode.B
local resetHitboxKey = Enum.KeyCode.R

local HEAD_HITBOX_TOGGLE_VALUES = {2, 5, 10, 20, 40, 50}
local BODY_HITBOX_TOGGLE_VALUES = {2, 6, 12, 24, 48, 50}
local headHitboxToggleIndex = 1
local bodyHitboxToggleIndex = 1

-- ฟังก์ชันแปลง Enum.KeyCode เป็นตัวอักษร (แสดงใน GUI)
local function keyToString(key)
    return (key and tostring(key):gsub("Enum.KeyCode.", "")) or ""
end

------------------------------------------------------------------
-- HITBOX SECTION (ปรับขนาด Hitbox จริง)
------------------------------------------------------------------
-- ปรับขนาดจริงของ Head และ Body
local function setHitboxSizes(char, head, body)
    head = math.clamp(head, 0.01, MAX_HITBOX_SIZE)
    body = math.clamp(body, 0.01, MAX_HITBOX_SIZE)
    if char:FindFirstChild("Head") then
        local part = char.Head
        part.Size = Vector3.new(head, head, head)
        local mesh = part:FindFirstChildOfClass("SpecialMesh")
        if mesh then
            mesh.Scale = Vector3.new(1, 1, 1) -- รีเซ็ต scale เพื่อให้ขนาดสมจริง
        end
        -- ไม่ set CanCollide/Anchored, ปล่อยให้เซิร์ฟเวอร์ควบคุม
    end
    if char:FindFirstChild("HumanoidRootPart") then
        local part = char.HumanoidRootPart
        part.Size = Vector3.new(body, body, body)
    end
    for _, part in ipairs(char:GetChildren()) do
        if part:IsA("BasePart") and part.Name:find("Torso") then
            part.Size = Vector3.new(body, body, body)
        end
    end
end

local function resetHitboxSizes(char)
    if char:FindFirstChild("Head") then
        local part = char.Head
        part.Size = DEFAULT_HEAD_SIZE
        local mesh = part:FindFirstChildOfClass("SpecialMesh")
        if mesh then
            mesh.Scale = Vector3.new(1.25, 1.25, 1.25) -- ค่าเริ่มต้นทั่วไปสำหรับ Head mesh ใน Roblox
        end
    end
    if char:FindFirstChild("HumanoidRootPart") then
        local part = char.HumanoidRootPart
        part.Size = DEFAULT_BODY_SIZE
    end
    for _, part in ipairs(char:GetChildren()) do
        if part:IsA("BasePart") and part.Name:find("Torso") then
            part.Size = Vector3.new(2, 2, 1) -- ค่าเริ่มต้นสำหรับ Torso
        end
    end
end

local function updateAllHitboxes()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            setHitboxSizes(plr.Character, HEAD_HITBOX_SIZE, BODY_HITBOX_SIZE)
        end
    end
end

local function resetAllHitboxes()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            resetHitboxSizes(plr.Character)
        end
    end
    HEAD_HITBOX_SIZE = 2
    BODY_HITBOX_SIZE = 2
    headSizeBox.Text = tostring(HEAD_HITBOX_SIZE)
    bodySizeBox.Text = tostring(BODY_HITBOX_SIZE)
    headHitboxToggleIndex = 1
    bodyHitboxToggleIndex = 1
end

Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function(char)
        task.wait(0.2)
        setHitboxSizes(char, HEAD_HITBOX_SIZE, BODY_HITBOX_SIZE)
    end)
end)

for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= player and plr.Character then
        setHitboxSizes(plr.Character, HEAD_HITBOX_SIZE, BODY_HITBOX_SIZE)
    end
end

------------------------------------------------------------------
-- GUI SETUP (ตกแต่งให้สวยงาม จัดเรียงให้ตรงกัน)
------------------------------------------------------------------
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LockOnGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 340) -- เพิ่มความสูงเพื่อรองรับปุ่มใหม่
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BackgroundTransparency = 0.05
MainFrame.Active = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = MainFrame

local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(100, 100, 100)
UIStroke.Transparency = 0.5
UIStroke.Thickness = 1
UIStroke.Parent = MainFrame

local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
}
UIGradient.Rotation = 90
UIGradient.Parent = MainFrame

local DragBar = Instance.new("Frame")
DragBar.Size = UDim2.new(1, 0, 0, 28)
DragBar.Position = UDim2.new(0, 0, 0, 0)
DragBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DragBar.Active = true
DragBar.Parent = MainFrame

local UICornerDrag = Instance.new("UICorner")
UICornerDrag.CornerRadius = UDim.new(0, 8)
UICornerDrag.Parent = DragBar

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Position = UDim2.new(0, 12, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "LockOn Settings"
Title.TextColor3 = Color3.new(1,1,1)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = DragBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 24, 0, 24)
MinimizeButton.Position = UDim2.new(1, -32, 0.5, -12)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
MinimizeButton.TextColor3 = Color3.new(1,1,1)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 20
MinimizeButton.Parent = DragBar

local UICornerMin = Instance.new("UICorner")
UICornerMin.CornerRadius = UDim.new(0, 4)
UICornerMin.Parent = MinimizeButton

local MiniButton = Instance.new("TextButton")
MiniButton.Size = UDim2.new(0, 44, 0, 44)
MiniButton.Position = UDim2.new(0.5, 0, 0.5, 0)
MiniButton.AnchorPoint = Vector2.new(0.5, 0.5)
MiniButton.Text = "☰"
MiniButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MiniButton.TextColor3 = Color3.new(1,1,1)
MiniButton.Font = Enum.Font.GothamBold
MiniButton.TextSize = 32
MiniButton.Visible = false
MiniButton.Parent = ScreenGui

local UICornerMini = Instance.new("UICorner")
UICornerMini.CornerRadius = UDim.new(0, 8)
UICornerMini.Parent = MiniButton

-- จัดเรียงให้ตรงกัน (ใช้ Position ที่สม่ำเสมอ)
local ToggleAutoLock = Instance.new("TextButton")
ToggleAutoLock.Size = UDim2.new(0, 260, 0, 34)
ToggleAutoLock.Position = UDim2.new(0, 20, 0, 40)
ToggleAutoLock.Text = "Auto-Lock: OFF"
ToggleAutoLock.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleAutoLock.TextColor3 = Color3.new(1,1,1)
ToggleAutoLock.Font = Enum.Font.GothamSemibold
ToggleAutoLock.TextSize = 18
ToggleAutoLock.Parent = MainFrame

local UICornerLock = Instance.new("UICorner")
UICornerLock.CornerRadius = UDim.new(0, 6)
UICornerLock.Parent = ToggleAutoLock

local ToggleAutoFire = Instance.new("TextButton")
ToggleAutoFire.Size = UDim2.new(0, 260, 0, 34)
ToggleAutoFire.Position = UDim2.new(0, 20, 0, 80)
ToggleAutoFire.Text = "Auto-Fire: OFF"
ToggleAutoFire.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleAutoFire.TextColor3 = Color3.new(1,1,1)
ToggleAutoFire.Font = Enum.Font.GothamSemibold
ToggleAutoFire.TextSize = 18
ToggleAutoFire.Parent = MainFrame

local UICornerFire = Instance.new("UICorner")
UICornerFire.CornerRadius = UDim.new(0, 6)
UICornerFire.Parent = ToggleAutoFire

local ToggleTeamCheck = Instance.new("TextButton")
ToggleTeamCheck.Size = UDim2.new(0, 260, 0, 34)
ToggleTeamCheck.Position = UDim2.new(0, 20, 0, 120)
ToggleTeamCheck.Text = "Team Check: ON"
ToggleTeamCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleTeamCheck.TextColor3 = Color3.new(1,1,1)
ToggleTeamCheck.Font = Enum.Font.GothamSemibold
ToggleTeamCheck.TextSize = 18
ToggleTeamCheck.Parent = MainFrame

local UICornerTeam = Instance.new("UICorner")
UICornerTeam.CornerRadius = UDim.new(0, 6)
UICornerTeam.Parent = ToggleTeamCheck

local ResetHitboxButton = Instance.new("TextButton")
ResetHitboxButton.Size = UDim2.new(0, 260, 0, 34)
ResetHitboxButton.Position = UDim2.new(0, 20, 0, 160)
ResetHitboxButton.Text = "Reset Hitboxes"
ResetHitboxButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
ResetHitboxButton.TextColor3 = Color3.new(1,1,1)
ResetHitboxButton.Font = Enum.Font.GothamSemibold
ResetHitboxButton.TextSize = 18
ResetHitboxButton.Parent = MainFrame

local UICornerReset = Instance.new("UICorner")
UICornerReset.CornerRadius = UDim.new(0, 6)
UICornerReset.Parent = ResetHitboxButton

local distanceLabel = Instance.new("TextLabel")
distanceLabel.Size = UDim2.new(0, 140, 0, 26)
distanceLabel.Position = UDim2.new(0, 20, 0, 200)
distanceLabel.BackgroundTransparency = 1
distanceLabel.Text = "Lock Distance:"
distanceLabel.TextColor3 = Color3.new(1,1,1)
distanceLabel.Font = Enum.Font.GothamSemibold
distanceLabel.TextSize = 16
distanceLabel.TextXAlignment = Enum.TextXAlignment.Left
distanceLabel.Parent = MainFrame

local distanceBox = Instance.new("TextBox")
distanceBox.Size = UDim2.new(0, 140, 0, 26)
distanceBox.Position = UDim2.new(0, 140, 0, 200)
distanceBox.Text = tostring(LOCK_DISTANCE)
distanceBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
distanceBox.TextColor3 = Color3.new(1,1,1)
distanceBox.Font = Enum.Font.Gotham
distanceBox.TextSize = 16
distanceBox.ClearTextOnFocus = false
distanceBox.Parent = MainFrame

local UICornerDist = Instance.new("UICorner")
UICornerDist.CornerRadius = UDim.new(0, 4)
UICornerDist.Parent = distanceBox

local headSizeLabel = Instance.new("TextLabel")
headSizeLabel.Size = UDim2.new(0, 140, 0, 26)
headSizeLabel.Position = UDim2.new(0, 20, 0, 230)
headSizeLabel.BackgroundTransparency = 1
headSizeLabel.Text = "Head Hitbox:"
headSizeLabel.TextColor3 = Color3.new(1,1,1)
headSizeLabel.Font = Enum.Font.GothamSemibold
headSizeLabel.TextSize = 16
headSizeLabel.TextXAlignment = Enum.TextXAlignment.Left
headSizeLabel.Parent = MainFrame

local headSizeBox = Instance.new("TextBox")
headSizeBox.Size = UDim2.new(0, 140, 0, 26)
headSizeBox.Position = UDim2.new(0, 140, 0, 230)
headSizeBox.Text = tostring(HEAD_HITBOX_SIZE)
headSizeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
headSizeBox.TextColor3 = Color3.new(1,1,1)
headSizeBox.Font = Enum.Font.Gotham
headSizeBox.TextSize = 16
headSizeBox.ClearTextOnFocus = false
headSizeBox.Parent = MainFrame

local UICornerHead = Instance.new("UICorner")
UICornerHead.CornerRadius = UDim.new(0, 4)
UICornerHead.Parent = headSizeBox

local bodySizeLabel = Instance.new("TextLabel")
bodySizeLabel.Size = UDim2.new(0, 140, 0, 26)
bodySizeLabel.Position = UDim2.new(0, 20, 0, 260)
bodySizeLabel.BackgroundTransparency = 1
bodySizeLabel.Text = "Body Hitbox:"
bodySizeLabel.TextColor3 = Color3.new(1,1,1)
bodySizeLabel.Font = Enum.Font.GothamSemibold
bodySizeLabel.TextSize = 16
bodySizeLabel.TextXAlignment = Enum.TextXAlignment.Left
bodySizeLabel.Parent = MainFrame

local bodySizeBox = Instance.new("TextBox")
bodySizeBox.Size = UDim2.new(0, 140, 0, 26)
bodySizeBox.Position = UDim2.new(0, 140, 0, 260)
bodySizeBox.Text = tostring(BODY_HITBOX_SIZE)
bodySizeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
bodySizeBox.TextColor3 = Color3.new(1,1,1)
bodySizeBox.Font = Enum.Font.Gotham
bodySizeBox.TextSize = 16
bodySizeBox.ClearTextOnFocus = false
bodySizeBox.Parent = MainFrame

local UICornerBody = Instance.new("UICorner")
UICornerBody.CornerRadius = UDim.new(0, 4)
UICornerBody.Parent = bodySizeBox

local keySectionLabel = Instance.new("TextLabel")
keySectionLabel.Size = UDim2.new(1, -40, 0, 20)
keySectionLabel.Position = UDim2.new(0, 20, 0, 290)
keySectionLabel.BackgroundTransparency = 1
keySectionLabel.Text = "Hotkeys:"
keySectionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
keySectionLabel.Font = Enum.Font.GothamBold
keySectionLabel.TextSize = 14
keySectionLabel.TextXAlignment = Enum.TextXAlignment.Left
keySectionLabel.Parent = MainFrame

local headHotkeyLabel = Instance.new("TextLabel")
headHotkeyLabel.Size = UDim2.new(0, 100, 0, 18)
headHotkeyLabel.Position = UDim2.new(0, 20, 0, 310)
headHotkeyLabel.BackgroundTransparency = 1
headHotkeyLabel.Text = "Head Hotkey:"
headHotkeyLabel.TextColor3 = Color3.new(1,1,1)
headHotkeyLabel.Font = Enum.Font.Gotham
headHotkeyLabel.TextSize = 13
headHotkeyLabel.TextXAlignment = Enum.TextXAlignment.Left
headHotkeyLabel.Parent = MainFrame

local headHotkeyBox = Instance.new("TextBox")
headHotkeyBox.Size = UDim2.new(0, 50, 0, 18)
headHotkeyBox.Position = UDim2.new(0, 120, 0, 310)
headHotkeyBox.Text = keyToString(toggleHeadHitboxKey)
headHotkeyBox.ClearTextOnFocus = false
headHotkeyBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
headHotkeyBox.TextColor3 = Color3.new(1,1,1)
headHotkeyBox.Font = Enum.Font.Gotham
headHotkeyBox.TextSize = 13
headHotkeyBox.Parent = MainFrame

local UICornerHeadHot = Instance.new("UICorner")
UICornerHeadHot.CornerRadius = UDim.new(0, 4)
UICornerHeadHot.Parent = headHotkeyBox

local bodyHotkeyLabel = Instance.new("TextLabel")
bodyHotkeyLabel.Size = UDim2.new(0, 100, 0, 18)
bodyHotkeyLabel.Position = UDim2.new(0, 180, 0, 310)
bodyHotkeyLabel.BackgroundTransparency = 1
bodyHotkeyLabel.Text = "Body Hotkey:"
bodyHotkeyLabel.TextColor3 = Color3.new(1,1,1)
bodyHotkeyLabel.Font = Enum.Font.Gotham
bodyHotkeyLabel.TextSize = 13
bodyHotkeyLabel.TextXAlignment = Enum.TextXAlignment.Left
bodyHotkeyLabel.Parent = MainFrame

local bodyHotkeyBox = Instance.new("TextBox")
bodyHotkeyBox.Size = UDim2.new(0, 50, 0, 18)
bodyHotkeyBox.Position = UDim2.new(0, 280, 0, 310)
bodyHotkeyBox.AnchorPoint = Vector2.new(1,0)
bodyHotkeyBox.Text = keyToString(toggleBodyHitboxKey)
bodyHotkeyBox.ClearTextOnFocus = false
bodyHotkeyBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
bodyHotkeyBox.TextColor3 = Color3.new(1,1,1)
bodyHotkeyBox.Font = Enum.Font.Gotham
bodyHotkeyBox.TextSize = 13
bodyHotkeyBox.Parent = MainFrame

local UICornerBodyHot = Instance.new("UICorner")
UICornerBodyHot.CornerRadius = UDim.new(0, 4)
UICornerBodyHot.Parent = bodyHotkeyBox

local keyLockLabel = Instance.new("TextLabel")
keyLockLabel.Size = UDim2.new(0, 100, 0, 18)
keyLockLabel.Position = UDim2.new(0, 20, 0, 330)
keyLockLabel.BackgroundTransparency = 1
keyLockLabel.Text = "Auto-Lock Key:"
keyLockLabel.TextColor3 = Color3.new(1,1,1)
keyLockLabel.Font = Enum.Font.Gotham
keyLockLabel.TextSize = 13
keyLockLabel.TextXAlignment = Enum.TextXAlignment.Left
keyLockLabel.Parent = MainFrame

local keyLockBox = Instance.new("TextBox")
keyLockBox.Size = UDim2.new(0, 50, 0, 18)
keyLockBox.Position = UDim2.new(0, 120, 0, 330)
keyLockBox.Text = keyToString(toggleLockKey)
keyLockBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
keyLockBox.TextColor3 = Color3.new(1,1,1)
keyLockBox.Font = Enum.Font.Gotham
keyLockBox.TextSize = 13
keyLockBox.ClearTextOnFocus = false
keyLockBox.Parent = MainFrame

local UICornerLockKey = Instance.new("UICorner")
UICornerLockKey.CornerRadius = UDim.new(0, 4)
UICornerLockKey.Parent = keyLockBox

local keyFireLabel = Instance.new("TextLabel")
keyFireLabel.Size = UDim2.new(0, 100, 0, 18)
keyFireLabel.Position = UDim2.new(0, 180, 0, 330)
keyFireLabel.BackgroundTransparency = 1
keyFireLabel.Text = "Auto-Fire Key:"
keyFireLabel.TextColor3 = Color3.new(1,1,1)
keyFireLabel.Font = Enum.Font.Gotham
keyFireLabel.TextSize = 13
keyFireLabel.TextXAlignment = Enum.TextXAlignment.Left
keyFireLabel.Parent = MainFrame

local keyFireBox = Instance.new("TextBox")
keyFireBox.Size = UDim2.new(0, 50, 0, 18)
keyFireBox.Position = UDim2.new(0, 280, 0, 330)
keyFireBox.AnchorPoint = Vector2.new(1,0)
keyFireBox.Text = keyToString(toggleFireKey)
keyFireBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
keyFireBox.TextColor3 = Color3.new(1,1,1)
keyFireBox.Font = Enum.Font.Gotham
keyFireBox.TextSize = 13
keyFireBox.ClearTextOnFocus = false
keyFireBox.Parent = MainFrame

local UICornerFireKey = Instance.new("UICorner")
UICornerFireKey.CornerRadius = UDim.new(0, 4)
UICornerFireKey.Parent = keyFireBox

local resetHotkeyLabel = Instance.new("TextLabel")
resetHotkeyLabel.Size = UDim2.new(0, 100, 0, 18)
resetHotkeyLabel.Position = UDim2.new(0, 20, 0, 350)
resetHotkeyLabel.BackgroundTransparency = 1
resetHotkeyLabel.Text = "Reset Hotkey:"
resetHotkeyLabel.TextColor3 = Color3.new(1,1,1)
resetHotkeyLabel.Font = Enum.Font.Gotham
resetHotkeyLabel.TextSize = 13
resetHotkeyLabel.TextXAlignment = Enum.TextXAlignment.Left
resetHotkeyLabel.Parent = MainFrame

local resetHotkeyBox = Instance.new("TextBox")
resetHotkeyBox.Size = UDim2.new(0, 50, 0, 18)
resetHotkeyBox.Position = UDim2.new(0, 120, 0, 350)
resetHotkeyBox.Text = keyToString(resetHitboxKey)
resetHotkeyBox.ClearTextOnFocus = false
resetHotkeyBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
resetHotkeyBox.TextColor3 = Color3.new(1,1,1)
resetHotkeyBox.Font = Enum.Font.Gotham
resetHotkeyBox.TextSize = 13
resetHotkeyBox.Parent = MainFrame

local UICornerResetKey = Instance.new("UICorner")
UICornerResetKey.CornerRadius = UDim.new(0, 4)
UICornerResetKey.Parent = resetHotkeyBox

local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, -40, 0, 30)
label.Position = UDim2.new(0, 20, 0, 370)
label.Text = ""
label.TextColor3 = Color3.new(1,1,1)
label.BackgroundTransparency = 1
label.TextStrokeTransparency = 0.6
label.Font = Enum.Font.Gotham
label.TextSize = 18
label.TextXAlignment = Enum.TextXAlignment.Left
label.Parent = MainFrame

------------------------------------------------------------------
-- LOGIC SECTION
------------------------------------------------------------------
local autoLockEnabled = false
local autoFireEnabled = false
local teamCheckEnabled = true
local target = nil
local FIRE_COOLDOWN = 0.15

local lastTargetHumanoid = nil
local lastTarget = nil

local function showKillPopup()
    local popup = Instance.new("TextLabel")
    popup.Size = UDim2.new(0, 150, 0, 60)
    popup.Position = UDim2.new(0.5, -75, 0.4, 0)
    popup.BackgroundTransparency = 1
    popup.Text = "KILL +1"
    popup.TextColor3 = Color3.fromRGB(255, 80, 80)
    popup.TextStrokeTransparency = 0.3
    popup.Font = Enum.Font.GothamBlack
    popup.TextSize = 48
    popup.Parent = ScreenGui

    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local goal = {Position = UDim2.new(0.5, -75, 0.3, 0), TextTransparency = 1, TextStrokeTransparency = 1}
    TweenService:Create(popup, tweenInfo, goal):Play()
    task.delay(1.1, function()
        popup:Destroy()
    end)
end

local function getFrontFacingTarget()
    local cam = workspace.CurrentCamera
    local camPos = cam.CFrame.Position
    local camLook = cam.CFrame.LookVector
    local best, bestDot, minDist = nil, -1, math.huge
    for _, other in ipairs(Players:GetPlayers()) do
        if other ~= player and other.Character and other.Character:FindFirstChild("HumanoidRootPart") then
            if not teamCheckEnabled or (not other.Team or not player.Team or other.Team ~= player.Team) then
                local humanoid = other.Character:FindFirstChildOfClass("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    local hrp = other.Character.HumanoidRootPart
                    local toTarget = (hrp.Position - camPos)
                    local dist = toTarget.Magnitude
                    local dot = camLook:Dot(toTarget.Unit)
                    if dist <= LOCK_DISTANCE and dot > bestDot then
                        bestDot = dot
                        best = other
                        minDist = dist
                    elseif dist <= LOCK_DISTANCE and dot == bestDot and dist < minDist then
                        best = other
                        minDist = dist
                    end
                end
            end
        end
    end
    return best
end

local function moveCameraInFrontOfTarget(target)
    if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end
    local cam = workspace.CurrentCamera
    local hrp = target.Character.HumanoidRootPart
    local forward = hrp.CFrame.LookVector
    local camOffset = forward * 4
    local camPos = hrp.Position + camOffset + Vector3.new(0, 2, 0)
    local lookAt = hrp.Position + Vector3.new(0, 2, 0)
    cam.CFrame = CFrame.new(camPos, lookAt)
end

local function fire()
    local shootRemote = ReplicatedStorage:FindFirstChild("Shoot")
    if shootRemote and shootRemote:IsA("RemoteEvent") then
        shootRemote:FireServer()
    else
        local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
        if tool then
            tool:Activate()
        end
    end
end

ToggleAutoLock.MouseButton1Click:Connect(function()
    autoLockEnabled = not autoLockEnabled
    ToggleAutoLock.Text = "Auto-Lock: " .. (autoLockEnabled and "ON" or "OFF")
    ToggleAutoLock.BackgroundColor3 = autoLockEnabled and Color3.fromRGB(90, 200, 90) or Color3.fromRGB(60, 60, 60)
end)

ToggleAutoFire.MouseButton1Click:Connect(function()
    autoFireEnabled = not autoFireEnabled
    ToggleAutoFire.Text = "Auto-Fire: " .. (autoFireEnabled and "ON" or "OFF")
    ToggleAutoFire.BackgroundColor3 = autoFireEnabled and Color3.fromRGB(90, 200, 90) or Color3.fromRGB(60, 60, 60)
end)

ToggleTeamCheck.MouseButton1Click:Connect(function()
    teamCheckEnabled = not teamCheckEnabled
    ToggleTeamCheck.Text = "Team Check: " .. (teamCheckEnabled and "ON" or "OFF")
    ToggleTeamCheck.BackgroundColor3 = teamCheckEnabled and Color3.fromRGB(90, 200, 90) or Color3.fromRGB(60, 60, 60)
end)

ResetHitboxButton.MouseButton1Click:Connect(function()
    resetAllHitboxes()
end)

local lastFire = 0
local function tryAutoFire()
    if autoFireEnabled and target then
        local now = tick()
        if now - lastFire > FIRE_COOLDOWN then
            fire()
            lastFire = now
        end
    end
end

if UserInputService.TouchEnabled then
    UserInputService.TouchStarted:Connect(function(input, processed)
        tryAutoFire()
    end)
else
    UserInputService.InputBegan:Connect(function(input, processed)
        if processed then return end
        if input.KeyCode == toggleLockKey then
            ToggleAutoLock:MouseButton1Click()
        elseif input.KeyCode == toggleFireKey then
            ToggleAutoFire:MouseButton1Click()
        elseif input.KeyCode == toggleHeadHitboxKey then
            headHitboxToggleIndex = headHitboxToggleIndex + 1
            if headHitboxToggleIndex > #HEAD_HITBOX_TOGGLE_VALUES then headHitboxToggleIndex = 1 end
            HEAD_HITBOX_SIZE = HEAD_HITBOX_TOGGLE_VALUES[headHitboxToggleIndex]
            headSizeBox.Text = tostring(HEAD_HITBOX_SIZE)
            updateAllHitboxes()
        elseif input.KeyCode == toggleBodyHitboxKey then
            bodyHitboxToggleIndex = bodyHitboxToggleIndex + 1
            if bodyHitboxToggleIndex > #BODY_HITBOX_TOGGLE_VALUES then bodyHitboxToggleIndex = 1 end
            BODY_HITBOX_SIZE = BODY_HITBOX_TOGGLE_VALUES[bodyHitboxToggleIndex]
            bodySizeBox.Text = tostring(BODY_HITBOX_SIZE)
            updateAllHitboxes()
        elseif input.KeyCode == resetHitboxKey then
            resetAllHitboxes()
        elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
            tryAutoFire()
        end
    end)
end

distanceBox.FocusLost:Connect(function()
    local val = tonumber(distanceBox.Text)
    if val then
        LOCK_DISTANCE = math.max(val, minLockDistance)
        distanceBox.Text = tostring(LOCK_DISTANCE)
    else
        distanceBox.Text = tostring(LOCK_DISTANCE)
    end
end)
headSizeBox.FocusLost:Connect(function()
    local val = tonumber(headSizeBox.Text)
    if val then
        HEAD_HITBOX_SIZE = math.clamp(val, 0.01, MAX_HITBOX_SIZE)
        headSizeBox.Text = tostring(HEAD_HITBOX_SIZE)
        updateAllHitboxes()
    else
        headSizeBox.Text = tostring(HEAD_HITBOX_SIZE)
    end
end)
bodySizeBox.FocusLost:Connect(function()
    local val = tonumber(bodySizeBox.Text)
    if val then
        BODY_HITBOX_SIZE = math.clamp(val, 0.01, MAX_HITBOX_SIZE)
        bodySizeBox.Text = tostring(BODY_HITBOX_SIZE)
        updateAllHitboxes()
    else
        bodySizeBox.Text = tostring(BODY_HITBOX_SIZE)
    end
end)

local waitingLockKey, waitingFireKey = false, false
local waitingHeadHotkey, waitingBodyHotkey = false, false
local waitingResetHotkey = false

keyLockBox.Focused:Connect(function()
    keyLockBox.Text = "..."
    waitingLockKey = true
end)
keyFireBox.Focused:Connect(function()
    keyFireBox.Text = "..."
    waitingFireKey = true
end)
headHotkeyBox.Focused:Connect(function()
    headHotkeyBox.Text = "..."
    waitingHeadHotkey = true
end)
bodyHotkeyBox.Focused:Connect(function()
    bodyHotkeyBox.Text = "..."
    waitingBodyHotkey = true
end)
resetHotkeyBox.Focused:Connect(function()
    resetHotkeyBox.Text = "..."
    waitingResetHotkey = true
end)

UserInputService.InputBegan:Connect(function(input, processed)
    if not processed then
        if waitingLockKey and input.KeyCode ~= Enum.KeyCode.Unknown then
            toggleLockKey = input.KeyCode
            keyLockBox.Text = keyToString(toggleLockKey)
            waitingLockKey = false
            keyLockBox:ReleaseFocus()
        elseif waitingFireKey and input.KeyCode ~= Enum.KeyCode.Unknown then
            toggleFireKey = input.KeyCode
            keyFireBox.Text = keyToString(toggleFireKey)
            waitingFireKey = false
            keyFireBox:ReleaseFocus()
        elseif waitingHeadHotkey and input.KeyCode ~= Enum.KeyCode.Unknown then
            toggleHeadHitboxKey = input.KeyCode
            headHotkeyBox.Text = keyToString(toggleHeadHitboxKey)
            waitingHeadHotkey = false
            headHotkeyBox:ReleaseFocus()
        elseif waitingBodyHotkey and input.KeyCode ~= Enum.KeyCode.Unknown then
            toggleBodyHitboxKey = input.KeyCode
            bodyHotkeyBox.Text = keyToString(toggleBodyHitboxKey)
            waitingBodyHotkey = false
            bodyHotkeyBox:ReleaseFocus()
        elseif waitingResetHotkey and input.KeyCode ~= Enum.KeyCode.Unknown then
            resetHitboxKey = input.KeyCode
            resetHotkeyBox.Text = keyToString(resetHitboxKey)
            waitingResetHotkey = false
            resetHotkeyBox:ReleaseFocus()
        end
    end
end)

MinimizeButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    MiniButton.Visible = true
    MiniButton.Position = MainFrame.Position
end)
MiniButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    MiniButton.Visible = false
end)

do
    local dragging, dragInput, dragStart, startPos
    local function update(input)
        if dragging then
            local viewport = workspace.CurrentCamera and workspace.CurrentCamera.ViewportSize or Vector2.new(1920,1080)
            local frameSize = MainFrame.AbsoluteSize
            local delta = input.Position - dragStart
            local newX = math.clamp(startPos.X + delta.X, 0, math.max(0, viewport.X - frameSize.X))
            local newY = math.clamp(startPos.Y + delta.Y, 0, math.max(0, viewport.Y - frameSize.Y))
            MainFrame.Position = UDim2.new(0, newX, 0, newY)
            if MiniButton.Visible then
                MiniButton.Position = MainFrame.Position
            end
        end
    end
    DragBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.AbsolutePosition
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    DragBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- เรียกอัปเดต hitbox ทุกๆ 1 วินาที ป้องกันโดนรีเซ็ต
task.spawn(function()
    while true do
        updateAllHitboxes()
        task.wait(1)
    end
end)

RunService.RenderStepped:Connect(function()
    if autoLockEnabled then
        local newTarget = getFrontFacingTarget()
        if newTarget ~= target then
            target = newTarget
        end
        if target then
            moveCameraInFrontOfTarget(target)
            label.Text = "Locking: " .. target.Name

            local humanoid = target.Character and target.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if lastTarget ~= target then
                    lastTarget = target
                    lastTargetHumanoid = humanoid
                end
                if lastTargetHumanoid and lastTargetHumanoid.Health == 0 then
                    showKillPopup()
                    lastTargetHumanoid = nil
                    lastTarget = nil
                end
            end
        else
            label.Text = "Locking: -"
            lastTarget = nil
            lastTargetHumanoid = nil
        end
    else
        target = nil
        label.Text = "Locking: -"
        lastTarget = nil
        lastTargetHumanoid = nil
    end
    if autoFireEnabled then
        tryAutoFire()
    end
end)
